@import "@/styles/mixins";

.tilt {
  transform-style: preserve-3d;
  will-change: transform;
  position: relative;
  z-index: 3;
  transform: perspective(1000px);

  @media (max-width: $sm-max-width) {
    transform: none !important;
    cursor: auto !important;
    will-change: none;

    &3d {
      display: none;
    }

    &Inner {
      transform: none !important;
    }
  }

  &Inner {
    transform: translateZ(50px);
  }

  &3d {
    position: absolute;
    top: rem(12);
    right: rem(50);
    background: $white;
    color: $dark;
    border-radius: 8px;
    padding: rem(1) rem(5) rem(0);
    border: 1px solid $white;
    cursor: pointer;
    font-weight: bold;
  }

  .preview {
    &Light {
      .tilt3d {
        background: $dark;
        color: $white;
        border-color: $dark;
      }
    }
  }

  &Disabled {
    transform: none !important;
    cursor: auto;

    .tilt3d {
      background: #000;
      border-color: $dark-gray-2;
      color: $white;
    }

    .preview {
      &Light {
        .tilt3d {
          background: $white;
          color: $dark;
          border-color: $gray-3;
        }
      }
    }
  }
}

.preview {
  background: #000000;
  border: 1px solid $dark-border;
  border-radius: rem(16);
  color: $white;
  padding: rem(60) 0 rem(70);
  margin: 0 auto rem(40);
  position: relative;
  text-align: center;

  &Light {
    color: $dark;
    background: #ffffff;
    border: 1px solid $border;

    .title {
      color: $dark;
    }

    .by,
    .notFound,
    .switchTheme {
      svg {
        * {
          fill: $dark;
        }
      }
    }

    :global(.link--dashed) {
      color: $dark !important;

      &:hover {
        color: $blue-light !important;
        border-bottom: 1px dashed $blue-light !important;
      }
    }
  }

  &Inner {
    position: relative;
    z-index: 2;

    :global(.link--dashed) {
      color: $white;
      border-bottom: 1px dashed $gray-5;

      &:hover {
        color: $blue-light;
        border-bottom: 1px dashed $blue-light;
      }
    }
  }
}

.shortMetadata {
  transition: opacity 0.3s ease-in-out;
  padding-left: rem(25);
  padding-right: rem(25);
}

.by {
  color: $gray-5;
  margin-bottom: rem(40);
  svg {
    height: rem(30);
    width: auto;
    * {
      fill: $white;
    }
  }
}

.notFound {
  font-weight: bold;
  svg {
    height: rem(170);
    width: auto;
    * {
      fill: $white;
    }
  }
}

.switchTheme {
  position: absolute;
  z-index: 2;
  top: rem(10);
  right: rem(10);

  svg {
    height: rem(30);
    width: auto;
    * {
      fill: $white;
    }
  }
}

.image {
  display: flex;
  align-content: center;
  justify-content: center;

  img {
    max-width: rem(600);
    max-height: rem(400);
    width: auto !important;
    height: auto !important;

    @media (max-width: $sm-max-width) {
      max-width: 100% !important;
    }
  }
}

.title {
  color: $white;
  word-wrap: break-word;
}

.pig {
  img {
    max-width: rem(300);
  }
}

.mints {
  border: 1px solid $border;
  border-radius: rem(16);
  padding: rem(30);
}

.viewer {
  text-align: left;
  padding-top: rem(30);
  // padding: rem(30) rem(25);
  // border-radius: 8px;
  // background: $white;
  white-space: nowrap;
  overflow-x: auto;
  font-size: rem(14);

  :global(.react-json-view) {
    background: $white !important;
  }

  &Link {
    display: inline-block;
    margin: 0 rem(10) rem(10) 0;
    border: 2px solid $primary;
    color: $primary;
    padding: 0 rem(10);
    font-weight: bold;
    border-radius: 100px;
    cursor: pointer;
    @include transition-fast();

    &Active {
      background: $primary;
      color: $white !important;

      &:hover {
        background: $blue-light;
      }
    }

    &:hover {
      color: $blue-light;
      border-color: $blue-light;
    }
  }
}

// dark theme
[data-theme="dark"] {
  .mints {
    border: 1px solid $dark-border;
  }

  .viewer {
    background: $dark-gray-5;

    :global(.react-json-view) {
      background: $dark-gray-5 !important;
    }
  }
}
